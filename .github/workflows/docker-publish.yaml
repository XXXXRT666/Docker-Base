name: Build and Publish Docker Base Image

on:
  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - cuda_version: 12.4
            lite: true
            tag_prefix: cu124-lite
          - cuda_version: 12.4
            lite: false
            tag_prefix: cu124-full
          - cuda_version: 12.8
            lite: true
            tag_prefix: cu128-lite
          - cuda_version: 12.8
            lite: false
            tag_prefix: cu128-full

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Before cleanup:"
          df -h  

          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /opt/hostedtoolcache/PyPy
          sudo rm -rf /opt/hostedtoolcache/go
          sudo rm -rf /opt/hostedtoolcache/node
          sudo rm -rf /opt/hostedtoolcache/Ruby
          sudo rm -rf /opt/microsoft
          sudo rm -rf /opt/pipx
          sudo rm -rf /opt/az
          sudo rm -rf /opt/google
          
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/lib/google-cloud-sdk
          sudo rm -rf /usr/lib/dotnet

          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/julia1.11.5
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium

          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/miniconda
          sudo rm -rf /usr/share/az_12.1.0
          sudo rm -rf /usr/share/dotnet
          
          echo "After cleanup:"
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          build-args: |
            LITE=${{ matrix.lite }}
            CUDA_VERSION=${{ matrix.cuda_version }}
            WORKFLOW=true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/torch-base:${{ matrix.tag_prefix }}-amd64

  build-arm64:
    runs-on: ubuntu-22.04-arm
    strategy:
      matrix:
        include:
          - cuda_version: 12.4
            lite: true
            tag_prefix: cu124-lite
          - cuda_version: 12.4
            lite: false
            tag_prefix: cu124
          - cuda_version: 12.8
            lite: true
            tag_prefix: cu128-lite
          - cuda_version: 12.8
            lite: false
            tag_prefix: cu128

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Before cleanup:"
          df -h  

          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /opt/hostedtoolcache/PyPy
          sudo rm -rf /opt/hostedtoolcache/go
          sudo rm -rf /opt/hostedtoolcache/node
          sudo rm -rf /opt/hostedtoolcache/Ruby
          sudo rm -rf /opt/microsoft
          sudo rm -rf /opt/pipx
          sudo rm -rf /opt/az
          sudo rm -rf /opt/google

          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/lib/google-cloud-sdk
          sudo rm -rf /usr/lib/dotnet

          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/julia1.11.5
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium

          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/miniconda
          sudo rm -rf /usr/share/az_12.1.0
          sudo rm -rf /usr/share/dotnet
          
          echo "After cleanup:"
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          build-args: |
            LITE=${{ matrix.lite }}
            CUDA_VERSION=${{ matrix.cuda_version }}
            WORKFLOW=true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/torch-base:${{ matrix.tag_prefix }}-arm64

  merge-and-clean:
    needs:
      - build-amd64
      - build-arm64
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tag_prefix: cu124-runtime
          - tag_prefix: cu124-devel
          - tag_prefix: cu128-runtime
          - tag_prefix: cu128-devel

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Merge amd64 and arm64 into multi-arch image
        run: |
          TAG_PREFIX=${{ matrix.tag_prefix }}

          docker buildx imagetools create \
            --tag ${{ secrets.DOCKER_HUB_USERNAME }}/torch-base:${TAG_PREFIX} \
            ${{ secrets.DOCKER_HUB_USERNAME }}/torch-base:${TAG_PREFIX}-amd64 \
            ${{ secrets.DOCKER_HUB_USERNAME }}/torch-base:${TAG_PREFIX}-arm64

      - name: Delete old platform-specific tags via Docker Hub API
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_PASSWORD }}
          TAG_PREFIX: ${{ matrix.tag_prefix }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq

          TOKEN=$(curl -s -u $DOCKER_HUB_USERNAME:$DOCKER_HUB_TOKEN \
          "https://auth.docker.io/token?service=registry.docker.io&scope=repository:$DOCKER_HUB_USERNAME/torch-base:pull,push,delete" \
          | jq -r .token)

          for PLATFORM in amd64 arm64; do
            SAFE_PLATFORM=$(echo $PLATFORM | sed 's/\//-/g')
            LATEST_TAG="${TAG_PREFIX}-${SAFE_PLATFORM}"

            echo "Deleting tag: $LATEST_TAG"
            curl -X DELETE -H "Authorization: Bearer $TOKEN" https://registry-1.docker.io/v2/$DOCKER_HUB_USERNAME/torch-base/manifests/$LATEST_TAG
          done
